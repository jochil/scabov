package php

var arrayFunctions = []string{
	"array_change_key_case",
	"array_change_key_case",
	"array",
	"array_change_key_case",
	"array_chunk",
	"array_column",
	"array_combine",
	"array_count_values",
	"array_diff",
	"array_diff_assoc",
	"array_diff_key",
	"array_diff_uassoc",
	"array_diff_ukey",
	"array_fill",
	"array_fill_keys",
	"array_filter",
	"array_flip",
	"array_intersect",
	"array_intersect_assoc",
	"array_intersect_key",
	"array_intersect_uassoc",
	"array_intersect_ukey",
	"array_key_exists",
	"array_keys",
	"array_map",
	"array_merge",
	"array_merge_recursive",
	"array_multisort",
	"array_pad",
	"array_pop",
	"array_product",
	"array_push",
	"array_rand",
	"array_reduce",
	"array_replace",
	"array_replace_recursive",
	"array_reverse",
	"array_search",
	"array_shift",
	"array_slice",
	"array_splice",
	"array_sum",
	"array_udiff",
	"array_udiff_assoc",
	"array_udiff_uassoc",
	"array_uintersect",
	"array_uintersect_assoc",
	"array_uintersect_uassoc",
	"array_unique",
	"array_unshift",
	"array_values",
	"array_walk",
	"array_walk_recursive",
	"arsort",
	"asort",
	"compact",
	"count",
	"current",
	"each",
	"end",
	"extract",
	"in_array",
	"key",
	"krsort",
	"ksort",
	"list",
	"natcasesort",
	"natsort",
	"next",
	"pos",
	"prev",
	"range",
	"reset",
	"rsort",
	"shuffle",
	"sizeof",
	"sort",
	"uasort",
	"uksort",
	"usort",
}

func NumInternalFunctions() uint {
	return uint(len(arrayFunctions))
}

func IsInternalFunction(name string) bool {
	for _, intFunc := range arrayFunctions {
		if intFunc == name {
			return true
		}
	}
	return false
}
